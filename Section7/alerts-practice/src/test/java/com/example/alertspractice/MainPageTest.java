package com.example.alertspractice;

import org.example.SetWebDriverLocation;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.*;

import static org.testng.Assert.*;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import java.time.Duration;

public class MainPageTest {
  private final String url = "https://rahulshettyacademy.com/AutomationPractice/";
  private final String myName = "Eric Ricketts";
  private final String alertGreetingText = "Hello Eric Ricketts," +
      " share this practice page and share your knowledge";
  private final String confirmGreetingText = "Hello Eric Ricketts, Are you sure you want to confirm?";
  private final String alertButtonValue = "Alert";
  private final String confirmButtonValue = "Confirm";
  private WebDriver driver;
  private MainPage mainPage;

  private Duration duration;

  private WebDriverWait wait;

  @BeforeClass
  public static void oneTimeSetup() {
    SetWebDriverLocation.setDriverLocationAndDriverSystemProperty();
  }
  @BeforeMethod
  public void setUp() {
    duration = Duration.ofSeconds(10);
    driver = new ChromeDriver();
    driver.manage().window().maximize();
    driver.get(url);

    mainPage = new MainPage(driver);
    wait = new WebDriverWait(driver, duration);
  }

  @AfterMethod
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void testAlerts() throws InterruptedException {
    String alertText, confirmText;
    boolean alertCleared, nameIsVisible;
    // find the name input for the alert button
    // enter your name
    mainPage.nameInput.click();
    mainPage.nameInput.sendKeys(myName);

    // wait until the text is visible on the input before clicking the alter button
    nameIsVisible = wait.until(
        ExpectedConditions.attributeToBe(mainPage.nameInput, "value", myName)
    );

    assertTrue(nameIsVisible);

    // now that the name is visible click the alert button
    mainPage.alertButton.click();

    // now we need to assert on the text within the alert.  However, the alert
    // is not part of the webpage as it is generated by Javascript, so in order
    // to access the alert we need to tell Selenium to switch contexts
    alertText = driver.switchTo().alert().getText();
    Assert.assertTrue(alertText.contains(alertGreetingText));

    // the accept method clicks the OK button to clear the alert
    driver.switchTo().alert().accept();

    // assert the alert has cleared and webpage is now interactive again
    alertCleared = wait.until(
        ExpectedConditions.attributeToBe(mainPage.alertButton, "value", alertButtonValue)
    );

    assertTrue(alertCleared);

    // that example was the first kind of alert where there is only an "OK" button
    // and one has no choice but to accept it the other kind of alert is a kind
    // where there is an "OK" button and a "Cancel" button, fortunately Rahul
    // has provided this option in this webpage

    // in each case for the alerts we have to fill out the name field
    // as each time an alert is cleared the name field is also cleared
    mainPage.nameInput.click();
    mainPage.nameInput.sendKeys(myName);
    // wait until the text is visible on the input before clicking the alter button
    nameIsVisible = wait.until(
        ExpectedConditions.attributeToBe(mainPage.nameInput, "value", myName)
    );

    assertTrue(nameIsVisible);

    // click the Confirm button to bring up the second type of alert
    // assert on the text in the alert
    mainPage.confirmButton.click();
    confirmText = driver.switchTo().alert().getText();
    assertTrue(confirmText.contains(confirmGreetingText));

    // this has the effect of selecting the Cancel button
    driver.switchTo().alert().dismiss();

    alertCleared = wait.until(
        ExpectedConditions.attributeToBe(mainPage.confirmButton, "value", confirmButtonValue)
    );

    assertTrue(alertCleared);

    // in each case for the alerts we have to fill out the name field
    // as each time an alert is cleared the name field is also cleared
    mainPage.nameInput.click();
    mainPage.nameInput.sendKeys(myName);
    // wait until the text is visible on the input before clicking the alter button
    nameIsVisible = wait.until(
        ExpectedConditions.attributeToBe(mainPage.nameInput, "value", myName)
    );

    assertTrue(nameIsVisible);

    // repeat the process and clear the alert with the "OK" button
    mainPage.confirmButton.click();
    confirmText = driver.switchTo().alert().getText();
    assertTrue(confirmText.contains(confirmGreetingText));

    // this has the effect of selecting the "OK" button
    driver.switchTo().alert().accept();

    alertCleared = wait.until(
        ExpectedConditions.attributeToBe(mainPage.confirmButton, "value", confirmButtonValue)
    );

    assertTrue(alertCleared);
  }
}
